// <auto-generated />
using System;
using JudoApp.API.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace JudoApp.API.Migrations
{
    [DbContext(typeof(judoAppDataContext))]
    partial class judoAppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("JudoApp.API.Models.Club", b =>
                {
                    b.Property<int>("ClubID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int?>("contactoID")
                        .HasColumnType("int");

                    b.Property<int?>("direccionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<int?>("telefonoID")
                        .HasColumnType("int");

                    b.HasKey("ClubID");

                    b.HasIndex("contactoID");

                    b.HasIndex("direccionID");

                    b.HasIndex("telefonoID");

                    b.ToTable("Clubes");
                });

            modelBuilder.Entity("JudoApp.API.Models.Direccion", b =>
                {
                    b.Property<int>("direccionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Coordenadas")
                        .HasColumnType("text");

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<string>("apartamento")
                        .HasColumnType("text");

                    b.Property<string>("calle")
                        .HasColumnType("text");

                    b.Property<string>("numero")
                        .HasColumnType("text");

                    b.Property<int>("referencia")
                        .HasColumnType("int");

                    b.Property<int>("sectorID")
                        .HasColumnType("int");

                    b.HasKey("direccionID");

                    b.ToTable("Direcciones");
                });

            modelBuilder.Entity("JudoApp.API.Models.Miembro", b =>
                {
                    b.Property<int>("miembroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<string>("apellido")
                        .HasColumnType("text");

                    b.Property<string>("cedula")
                        .HasColumnType("text");

                    b.Property<int?>("circunscripcion")
                        .HasColumnType("int");

                    b.Property<int>("clubID")
                        .HasColumnType("int");

                    b.Property<int?>("contactoID")
                        .HasColumnType("int");

                    b.Property<string>("correoElectronico")
                        .HasColumnType("text");

                    b.Property<int?>("direccionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaIngredo")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("fechaNacimiento")
                        .HasColumnType("datetime");

                    b.Property<string>("folio")
                        .HasColumnType("text");

                    b.Property<int?>("historiaclinicaID")
                        .HasColumnType("int");

                    b.Property<int?>("nivelEducativo")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.Property<int>("personaID")
                        .HasColumnType("int");

                    b.Property<int?>("sexo")
                        .HasColumnType("int");

                    b.Property<int?>("telefonoID")
                        .HasColumnType("int");

                    b.HasKey("miembroID");

                    b.HasIndex("contactoID");

                    b.HasIndex("direccionID");

                    b.HasIndex("historiaclinicaID");

                    b.HasIndex("telefonoID");

                    b.ToTable("Miembros");
                });

            modelBuilder.Entity("JudoApp.API.Models.Telefono", b =>
                {
                    b.Property<int>("telefonoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("disponible")
                        .HasColumnType("bit");

                    b.Property<string>("numeroTelefonico")
                        .HasColumnType("text");

                    b.Property<bool>("principal")
                        .HasColumnType("bit");

                    b.Property<int>("referencia")
                        .HasColumnType("int");

                    b.Property<int>("tipoID")
                        .HasColumnType("int");

                    b.HasKey("telefonoID");

                    b.ToTable("Telefonos");
                });

            modelBuilder.Entity("JudoApp.API.Models.atleta", b =>
                {
                    b.Property<int>("atletaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<decimal>("indiceDeportivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("personaID")
                        .HasColumnType("int");

                    b.HasKey("atletaID");

                    b.ToTable("Atletas");
                });

            modelBuilder.Entity("JudoApp.API.Models.cargo", b =>
                {
                    b.Property<int>("cargoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.HasKey("cargoID");

                    b.ToTable("Cargos");
                });

            modelBuilder.Entity("JudoApp.API.Models.ciudad", b =>
                {
                    b.Property<int>("ciudadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("provinciaID")
                        .HasColumnType("int");

                    b.HasKey("ciudadID");

                    b.ToTable("Ciudades");
                });

            modelBuilder.Entity("JudoApp.API.Models.comiteEjecutivo", b =>
                {
                    b.Property<int>("comiteEjecutivoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CargoID")
                        .HasColumnType("int");

                    b.Property<int>("clubID")
                        .HasColumnType("int");

                    b.Property<int>("personaID")
                        .HasColumnType("int");

                    b.HasKey("comiteEjecutivoID");

                    b.HasIndex("clubID")
                        .IsUnique();

                    b.ToTable("ComiteteEjecutivo");
                });

            modelBuilder.Entity("JudoApp.API.Models.contacto", b =>
                {
                    b.Property<int>("contactoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("parentescoID")
                        .HasColumnType("int");

                    b.Property<int>("personaID")
                        .HasColumnType("int");

                    b.Property<bool>("principal")
                        .HasColumnType("bit");

                    b.HasKey("contactoID");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("JudoApp.API.Models.estadistica", b =>
                {
                    b.Property<int>("estadisticaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("combateID")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<int>("evantoID")
                        .HasColumnType("int");

                    b.Property<int>("evantoTipoID")
                        .HasColumnType("int");

                    b.Property<int>("historialDeportivoID")
                        .HasColumnType("int");

                    b.Property<int>("puntuacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("tiempo")
                        .HasColumnType("datetime");

                    b.HasKey("estadisticaID");

                    b.HasIndex("historialDeportivoID")
                        .IsUnique();

                    b.ToTable("Estadisticas");
                });

            modelBuilder.Entity("JudoApp.API.Models.evento", b =>
                {
                    b.Property<int>("eventoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.HasKey("eventoID");

                    b.ToTable("eventos");
                });

            modelBuilder.Entity("JudoApp.API.Models.historiaClinica", b =>
                {
                    b.Property<int>("historiaclinicaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.Property<int>("historialTipoID")
                        .HasColumnType("int");

                    b.Property<int>("personaID")
                        .HasColumnType("int");

                    b.Property<int?>("relevancia")
                        .HasColumnType("int");

                    b.HasKey("historiaclinicaID");

                    b.ToTable("HistoriasClinica");
                });

            modelBuilder.Entity("JudoApp.API.Models.historiaClinicaTipo", b =>
                {
                    b.Property<int>("historiaClinicaTipoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("text");

                    b.HasKey("historiaClinicaTipoID");

                    b.ToTable("HistoriaClinicaTipos");
                });

            modelBuilder.Entity("JudoApp.API.Models.historialDeportivo", b =>
                {
                    b.Property<int>("historialDeportivoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("atletaID")
                        .HasColumnType("int");

                    b.Property<int?>("direccionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime");

                    b.Property<int>("lugarObtenido")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("text");

                    b.HasKey("historialDeportivoID");

                    b.HasIndex("atletaID")
                        .IsUnique();

                    b.HasIndex("direccionID");

                    b.ToTable("historialesDeportivo");
                });

            modelBuilder.Entity("JudoApp.API.Models.pais", b =>
                {
                    b.Property<int>("paisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("paisID");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("JudoApp.API.Models.parentesco", b =>
                {
                    b.Property<int>("parentescoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Descripcion")
                        .HasColumnType("int");

                    b.HasKey("parentescoID");

                    b.ToTable("Parentescos");
                });

            modelBuilder.Entity("JudoApp.API.Models.provincia", b =>
                {
                    b.Property<int>("provinciaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("paisID")
                        .HasColumnType("int");

                    b.HasKey("provinciaID");

                    b.HasIndex("paisID")
                        .IsUnique();

                    b.ToTable("Provincias");
                });

            modelBuilder.Entity("JudoApp.API.Models.sector", b =>
                {
                    b.Property<int>("sectorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.Property<int>("ciudadID")
                        .HasColumnType("int");

                    b.HasKey("sectorID");

                    b.HasIndex("ciudadID")
                        .IsUnique();

                    b.ToTable("Sectores");
                });

            modelBuilder.Entity("JudoApp.API.Models.tipoEvento", b =>
                {
                    b.Property<int>("tipoeventoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("tipoeventoID");

                    b.ToTable("TiposEvento");
                });

            modelBuilder.Entity("JudoApp.API.Models.tipoTelefono", b =>
                {
                    b.Property<int>("tipoTelefonoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("text");

                    b.HasKey("tipoTelefonoID");

                    b.ToTable("tiposTelefono");
                });

            modelBuilder.Entity("JudoApp.API.Models.Club", b =>
                {
                    b.HasOne("JudoApp.API.Models.contacto", "contacto")
                        .WithMany()
                        .HasForeignKey("contactoID");

                    b.HasOne("JudoApp.API.Models.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("direccionID");

                    b.HasOne("JudoApp.API.Models.Telefono", "Telefono")
                        .WithMany()
                        .HasForeignKey("telefonoID");
                });

            modelBuilder.Entity("JudoApp.API.Models.Miembro", b =>
                {
                    b.HasOne("JudoApp.API.Models.contacto", "contacto")
                        .WithMany()
                        .HasForeignKey("contactoID");

                    b.HasOne("JudoApp.API.Models.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("direccionID");

                    b.HasOne("JudoApp.API.Models.historiaClinica", "HistoriaClinica")
                        .WithMany()
                        .HasForeignKey("historiaclinicaID");

                    b.HasOne("JudoApp.API.Models.Telefono", "Telefono")
                        .WithMany()
                        .HasForeignKey("telefonoID");
                });

            modelBuilder.Entity("JudoApp.API.Models.comiteEjecutivo", b =>
                {
                    b.HasOne("JudoApp.API.Models.Club", null)
                        .WithOne("ComiteEjecutivo")
                        .HasForeignKey("JudoApp.API.Models.comiteEjecutivo", "clubID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JudoApp.API.Models.estadistica", b =>
                {
                    b.HasOne("JudoApp.API.Models.historialDeportivo", null)
                        .WithOne("astadistica")
                        .HasForeignKey("JudoApp.API.Models.estadistica", "historialDeportivoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JudoApp.API.Models.historialDeportivo", b =>
                {
                    b.HasOne("JudoApp.API.Models.atleta", null)
                        .WithOne("HistorialDeportivo")
                        .HasForeignKey("JudoApp.API.Models.historialDeportivo", "atletaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JudoApp.API.Models.Direccion", "Direccion")
                        .WithMany()
                        .HasForeignKey("direccionID");
                });

            modelBuilder.Entity("JudoApp.API.Models.provincia", b =>
                {
                    b.HasOne("JudoApp.API.Models.pais", null)
                        .WithOne("Provincia")
                        .HasForeignKey("JudoApp.API.Models.provincia", "paisID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JudoApp.API.Models.sector", b =>
                {
                    b.HasOne("JudoApp.API.Models.ciudad", null)
                        .WithOne("Sector")
                        .HasForeignKey("JudoApp.API.Models.sector", "ciudadID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
